<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="elementsImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="elementsImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABq
        DQAAAk1TRnQBSQFMAgEBCAEAAaABAAGgAQABEgEAARIBAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFI
        AwABNgMAAQEBAAEQBQABYAEe/wD/AP8A/wD/AP8A/wD/AP8A/wA8AAGVAUsBlQFLAZUBSwGVAUsBlQFL
        AZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBS2wAAZUBSwGV
        AUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGV
        AUsBlQFLbAABlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFL
        AZUBSwGVAUsBlQFLAZUBSwGVAUsEAAFaAWsCAAGMATEeAAHWAVoGAAF7AW86AAGVAUsBlQFLDgABlQFL
        AeUBEAoAAZUBSwGVAUsEAAHWAVoEAAHWAVoB1gFaAdYBWgHWAVoB1gFaAdYBWgHWAVoB1gFaAdYBWgwA
        AdYBWgQAAXsBbyQAAZwBcxAAAZwBcwQAAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLBgABlQFLAeUBEAIA
        AWgBHQGVAUsBlQFLAZUBSwGVAUsBlQFLBAAB1gFaIgAB1gFaEgABEAFCDgABWgFrBAABvQF3CgABWgFr
        BAABvQF3BgABlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsEAAFoAR0BlQFLBgABlQFLAZUBSwGVAUsBlQFL
        AZUBSwQAAdYBWiIAAdYBWgEYAWMGAAH/AX8GAAHvAT0CAAEYAWMSAAGcAXMQAAGcAXMEAAHWAVoBlQFL
        AZUBSwGVAUsBlQFLAZUBSwQAASEBBAGVAUsBlQFLAZUBSwQAAZUBSwGVAUsBlQFLAZUBSwGVAUsEAAHW
        AVoSAAG9AXcCAAEIASEKAAH/AX8GAAGlARQIAAG9AXcB9wFeLAAB1gFaAZUBSwGVAUsBlQFLAZUBSwQA
        AU0BLgGVAUsBlQFLAZUBSwGVAUsBlQFLBAABlQFLAZUBSwGVAUsBlQFLBAAB1gFaAgAB/wF/Af8BfwwA
        AdYBWlAAAdYBWgGVAUsBlQFLAZUBSwGqASEB0AE6AZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGV
        AUsBlQFLAUcBGQGVAUsBlQFLAZUBSwQAAdYBWmQAAdYBWgGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGV
        AUsCAAGVAUsBlQFLAgABlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLBAAB/wF/AgAB1gFaAdYBWgHW
        AVoB1gFaAdYBWgHWAVoB1gFaAdYBWgHWAVoB1gFaAQgBIQHGARhGAAHeAXsEAAGVAUsBlQFLAZUBSwGV
        AUsBlQFLAZUBSwGVAUsCAAGVAUsBlQFLAZUBSwIAAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLCAAB3gF7
        FAABvQF3EAABvQF3CgAB/wF/JAABnAFzAZwBcwIAAf8BfwIAAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFL
        AZUBSwIAAZUBSwGVAUsBlQFLBAABlQFLAZUBSwGVAUsBlQFLAZUBSwYAATEBRgFKASkQAAH/AX8MAAHW
        AVoEAAEQAUICAAHeAXsOAAGUAVIiAAGcAXMEAAGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsCAAGV
        AUsBlQFLAZUBSwGVAUsBlQFLAgABlQFLAZUBSwGVAUsBlQFLBgAB/wF/EgABUgJKASkKAAHWAVoCAAEQ
        AUICAAEYAWMOAAGUAVIqAAGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwIAAZUBSwGVAUsBaAEdAZUBSwGV
        AUsBlQFLAZUBSwGqASEBlQFLAZUBSwGVAUsIAAGlARQSAAH/AX8KAAHWAVoEAAEYAWM8AAGVAUsBlQFL
        AZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBBgEVAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFL
        AZUBSygAAdYBWhIAAZQBUgwAAb0BdwFjAQweAAGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFL
        AZUBSwGVAUsBlQFLAU0BLgGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSygAAZwBcwHWAVoB1gFaAdYBWgHW
        AVoIAAHeAXsB1gFaAdYBWgHWAVoB1gFaKAABlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGV
        AUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUtsAAGVAUsBlQFLAZUBSwGVAUsBlQFL
        AZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBSwGVAUsBlQFLAZUBS/8AhQABjAEx
        AaUBFCwAAf8BfxgAAXMBTkIAAYwBMQIAAXsBbywAAdYBWloAAYwBMQIAAXsBbwgAATkBZwEYAWMBGAFj
        ARgBYwEYAWMBGAFjARgBYwEYAWMBGAFjARgBYwEYAWMBGAFjARgBYwEYAWMBGAFjATkBZwG9AXcEAAHW
        AVoqAAGUAVIKAAGUAVIWAAGUAVIIAAGMATECAAF7AW8KAAEpASUBIQEEAgABQgEIAWMBDAEhAQQKAAGE
        ARABQgEIBAABxgEYAZwBcwQAAdYBWjQAARABQgIAAZQBUhwAAYwBMQIAAXsBbwwAAXMBTgFjAQwCAAFr
        AS0BEAFCAQgBIQoAARABQgFrAS0EAAEIASEB3gF7BAAB1gFaDAAB7wE9KAABEAFCAgABlAFSGAABjAEx
        AgABewFvAgABGAFjAZQBUggAAb0BdwEIASECAAHWAVoBnAFzATEBRggAAWMBDAE5AWcBlAFSAUIBCAGE
        ARABUgFKAd4BewQAAdYBWg4AAbUBVigAARABQgIAAZQBUhQAAYwBMQIAAXsBbwQAARABQgIAAZQBUggA
        AfcBXgHGARgWAAFKASkB3gF7BgAB1gFaFAAB3gF7Af8BfyIAARABQgIAAZQBUhAAAYwBMQIAAXsBbwgA
        ARABQgIAAZQBUgYAAf8BfwHWAVoBxgEYEAABIQEEAa0BNQGcAXMB/wF/BgAB1gFaEgAB3gF7AdYCWgFr
        CgABGAFjAgABEAFCEAAB/wF/DAABlAFSAgABEAFCAgABjAExAgABewFvCAAB/wF/DgAB3gF7AbUBVgHG
        ARgBQgEICgABIQEEAe8BPQGcAXMB/wF/CAAB1gFaDAABCAEhAgABYwEMCAAB3gF7CAABGAFjAgABEAFC
        DAAB/wF/EAABlAFSAgABYwEMAgABewFvCAAB/wF/EAAB3gF7AVIBSgGtATUB1gFaAZQBUgFzAU4BcwFO
        AZQBUgG1AVYBlAFSAXMBTgFaAWsKAAHWAVoOAAHvAT0WAAEYAWMCAAEQAUIIAAH/AX8UAAGlARQCAAF7
        AW8IAAH/AX8SAAE5AWcBcwFOATkBZwHeAXsB3gF7Ab0BdwG9AXcB3gF7Ad4BewHeAXsBlAFSAXMBTgHe
        AXsIAAHWAVocAAGcAXMKAAEYAWMKAAEYAWMSAAGMATECAAF7AW8KAAEYAWMSAAF7AW8BewFvAd4Bew4A
        AZwBcwE5AWcB3gF7CAAB1gFaHAABWgFrKAABjAExAgABewFvQgAB3gF7HAAB/wF/JgABEAFCAgABewFv
        RgABvQF3AdYBWgHWAVoB1gFaAdYBWgHWAVoB/wF/Af8BfwoAAUoBKSoAAXsBb1gAAf8BfwEhAQQEAAHW
        AVrcAAFCAU0BPgcAAT4DAAEoAwABSAMAATYDAAEBAQABAQUAAYgBAhYAA//bAAE/Bv8FAAE/Bv8FAAEx
        Af8BPAEfAQ8C/wUAATABAAE8AT8BjwGHAcMFAAEwAQABPAE/AQ8BJwGTBQABMAEAATwBjgEuASABEAUA
        ATMBAQE9Ad4BfgcAATABAQE/Af8B/gcAATABAAE/Af8B/gcAATABAAE/Af8B/gEAARkFAAE5Af8BPwHf
        AX4BAAEBBQABOQH+AX0BjgFuAQABAwUAATkB/gF8AR8BDgEAAR8FAAE8AQABfAE/AY4BAAEfBQABPwH/
        AfwBPwEOAQABHwUAAT8B/wH8AR4BDwL/BQABPwb/BQABPwb/AwAJ/wMACP8B8wMAAv8B9wHgAT8D/wHj
        AwAC/wHzAeABPwP/AccDAAGAAQABMQHgAT8B3wF/AfcBjwMAAYABAAEwAeABPwGeAT8B5wEfAwABgAEA
        ATABYAI/AR8BzgEnAwABgAEAAjABPgF/AY8BnAFjAwABwAEAAXABHgF8Af8BxwE4AfEDAAHAAQABcAEM
        AXwBfwGPAREB4wMAAeABAAHwAQgBHgE/AR8BgwHHAwAB4AEBAfABEAEfAR4BPwHHAY8DAAHgAQAB8AEQ
        AQ8BngF/AY8BnwMAAeMB+AHwARABDwL/AR8B/wMAAv8B8AEQAQ8B/wH+AT8B/wMAAv8B+AEAAR8C/wF/
        Af8DAAP/AfgBPwT/AwAJ/wMACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>85</value>
  </metadata>
</root>