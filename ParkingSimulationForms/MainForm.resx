<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="elementsImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="elementsImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC4
        CQAAAk1TRnQBSQFMAgEBCAEAASgBAAEoAQABEgEAARIBAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFI
        AwABNgMAAQEBAAEQBQABYAEe/wD/AP8A/wD/AP8A/wD/AP8A/wD/AIUAAVoBawIAAYwBMR4AAdYBWgYA
        AXsBb04AAd4BewoAAcYBGAYAAdYBWgQAAdYBWgHWAVoB1gFaAdYBWgHWAVoB1gFaAdYBWgHWAVoB1gFa
        DAAB1gFaBAABewFvJAABnAFzEAABnAFzGAABtQFWAgAB9wFeDgAB1gFaIgAB1gFaEgABEAFCDgABWgFr
        BAABvQF3CgABWgFrBAABvQF3EAABGAFjBAAB1gFaFgAB1gFaIgAB1gFaARgBYwYAAf8BfwYAAe8BPQIA
        ARgBYxIAAZwBcxAAAZwBcwQAAdYBWggAAf8BfwQAASEBBAQAAXsBbwQAATEBRgwAAdYBWhIAAb0BdwIA
        AQgBIQoAAf8BfwYAAaUBFAgAAb0BdwH3AV4sAAHWAVoGAAH/AX8EAAHGARgEAAEYAWMCAAF7AW8EAAHv
        AT0KAAHWAVoCAAH/AX8B/wF/DAAB1gFaUAAB1gFaBAABSgEpAcYBGAExAUYB/wF/AgAB/wF/AgABjAEx
        AfcBXgQAATkBZwEIASEBxgEYAZwBcwYAAdYBWmQAAdYBWhIAAd4BewIAASEBBBAAAf8BfwIAAdYBWgHW
        AVoB1gFaAdYBWgHWAVoB1gFaAdYBWgHWAVoB1gFaAdYBWgEIASEBxgEYRgAB3gF7FAABGAFjAgABQgEI
        AgABWgFrEgAB3gF7FAABvQF3EAABvQF3CgAB/wF/JAABnAFzAZwBcwIAAf8Bfw4AAf8BfwIAAe8BPQgA
        Af8Bfw4AATEBRgFKASkQAAH/AX8MAAHWAVoEAAEQAUICAAHeAXsOAAGUAVIiAAGcAXMQAAFzAU4KAAFz
        AU4CAAH/AX8MAAH/AX8SAAFSAkoBKQoAAdYBWgIAARABQgIAARgBYw4AAZQBUjgAAf8BfxwAAaUBFBIA
        Af8BfwoAAdYBWgQAARgBY0YAAVoBa0AAAdYBWhIAAZQBUgwAAb0BdwFjAQxqAAGcAXMB1gFaAdYBWgHW
        AVoB1gFaCAAB3gF7AdYBWgHWAVoB1gFaAdYBWv8A/wBiAAGMATEBpQEULAAB/wF/GAABcwFOQgABjAEx
        AgABewFvLAAB1gFaWgABjAExAgABewFvCAABOQFnARgBYwEYAWMBGAFjARgBYwEYAWMBGAFjARgBYwEY
        AWMBGAFjARgBYwEYAWMBGAFjARgBYwEYAWMBOQFnAb0BdwQAAdYBWioAAZQBUgoAAZQBUhYAAZQBUggA
        AYwBMQIAAXsBbwoAASkBJQEhAQQCAAFCAQgBYwEMASEBBAoAAYQBEAFCAQgEAAHGARgBnAFzBAAB1gFa
        NAABEAFCAgABlAFSHAABjAExAgABewFvDAABcwFOAWMBDAIAAWsBLQEQAUIBCAEhCgABEAFCAWsBLQQA
        AQgBIQHeAXsEAAHWAVoMAAHvAT0oAAEQAUICAAGUAVIYAAGMATECAAF7AW8CAAEYAWMBlAFSCAABvQF3
        AQgBIQIAAdYBWgGcAXMBMQFGCAABYwEMATkBZwGUAVIBQgEIAYQBEAFSAUoB3gF7BAAB1gFaDgABtQFW
        KAABEAFCAgABlAFSFAABjAExAgABewFvBAABEAFCAgABlAFSCAAB9wFeAcYBGBYAAUoBKQHeAXsGAAHW
        AVoUAAHeAXsB/wF/IgABEAFCAgABlAFSEAABjAExAgABewFvCAABEAFCAgABlAFSBgAB/wF/AdYBWgHG
        ARgQAAEhAQQBrQE1AZwBcwH/AX8GAAHWAVoSAAHeAXsB1gJaAWsKAAEYAWMCAAEQAUIQAAH/AX8MAAGU
        AVICAAEQAUICAAGMATECAAF7AW8IAAH/AX8OAAHeAXsBtQFWAcYBGAFCAQgKAAEhAQQB7wE9AZwBcwH/
        AX8IAAHWAVoMAAEIASECAAFjAQwIAAHeAXsIAAEYAWMCAAEQAUIMAAH/AX8QAAGUAVICAAFjAQwCAAF7
        AW8IAAH/AX8QAAHeAXsBUgFKAa0BNQHWAVoBlAFSAXMBTgFzAU4BlAFSAbUBVgGUAVIBcwFOAVoBawoA
        AdYBWg4AAe8BPRYAARgBYwIAARABQggAAf8BfxQAAaUBFAIAAXsBbwgAAf8BfxIAATkBZwFzAU4BOQFn
        Ad4BewHeAXsBvQF3Ab0BdwHeAXsB3gF7Ad4BewGUAVIBcwFOAd4BewgAAdYBWhwAAZwBcwoAARgBYwoA
        ARgBYxIAAYwBMQIAAXsBbwoAARgBYxIAAXsBbwF7AW8B3gF7DgABnAFzATkBZwHeAXsIAAHWAVocAAFa
        AWsoAAGMATECAAF7AW9CAAHeAXscAAH/AX8mAAEQAUICAAF7AW9GAAG9AXcB1gFaAdYBWgHWAVoB1gFa
        AdYBWgH/AX8B/wF/CgABSgEpKgABewFvWAAB/wF/ASEBBAQAAdYBWtwAAUIBTQE+BwABPgMAASgDAAFI
        AwABNgMAAQEBAAEBBQABiAECFgAD/9kACf8DAAn/AwAC/wHxAf8BPAEfAQ8C/wMAAcABQAFwAQABPAE/
        AY8BhwHDAwAB/AFHAfABAAE8AT8BDwEnAZMDAAH4AUcB8AEAATwBjgEuASABEAMAAfABwwHzAQEBPQHe
        AX4FAAHhAaEB8AEBAT8B/wH+BQABwgGYAXABAAE/Af8B/gUAAf4BjwHwAQABPwH/Af4BAAEZAwAB/gFH
        AfkB/wE/Ad8BfgEAAQEDAAH8AWMB+QH+AX0BjgFuAQABAwMAAfwB8QH5Af4BfAEfAQ4BAAEfAwAB/AH/
        AfwBAAF8AT8BjgEAAR8DAAH7A/8B/AE/AQ4BAAEfAwAE/wH8AR4BDwL/AwAJ/wMACf8DAAn/AwAI/wHz
        AwAC/wH3AeABPwP/AeMDAAL/AfMB4AE/A/8BxwMAAYABAAExAeABPwHfAX8B9wGPAwABgAEAATAB4AE/
        AZ4BPwHnAR8DAAGAAQABMAFgAj8BHwHOAScDAAGAAQACMAE+AX8BjwGcAWMDAAHAAQABcAEeAXwB/wHH
        ATgB8QMAAcABAAFwAQwBfAF/AY8BEQHjAwAB4AEAAfABCAEeAT8BHwGDAccDAAHgAQEB8AEQAR8BHgE/
        AccBjwMAAeABAAHwARABDwGeAX8BjwGfAwAB4wH4AfABEAEPAv8BHwH/AwAC/wHwARABDwH/Af4BPwH/
        AwAC/wH4AQABHwL/AX8B/wMAA/8B+AE/BP8DAAn/AwAL
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>85</value>
  </metadata>
</root>